h1{
	color: #b3003b !important; 
	font-family: 'Ranchers', cursive !important;
    text-align: center;
    font-size:180px !important;
}
#primerh2 {
	color: #808080;
	font-family: 'Ranchers', cursive !important;
	text-align: center;
}
#primerparrafo {
		color: #808080;
		font-family: 'Ranchers', cursive !important;
		text-align: center;											
			border-width: 3px;	
			border-style: dotted;
			border-color: #0088dd;
		font-size:30px !important	
}

.parrafoazul{
	color:blue !important;
	text-align: center;
}

body {
	background-color: #e6e6ff !important;
	text-align: center;
	}

img {
	width: 304px;
	height: 290px; 
	text-align: center;
}

ul {
	color: black;
	font-family: 'Roboto Slab', serif;
	text-align: center;	
	font-size:20px !important
}

h2{
	font-family: 'Lobster' !important;
}

.imagenprincipal {
	width: 100%;
	height: 100%;
	text-align:center;
}

.preferencia {
  	text-align: center;
  	font-family: 'Merriweather', serif; 
  	font-size: 50px;
  	color: #8c1aff;
}

.pref {
	text-align: center;
  	font-family: 'Merriweather', serif;  
  	font-size: 30px;
  	color: #bf80ff !important;
}


.treat-button {
  font-family: 'Merriweather', serif;
  font-size: 2vmin;
  appearance: none;
  background: linear-gradient(to bottom, #cceeff, #b3e6ff);
  border: none;
  color:#cceeff !important;
  border-radius: 2em;
  padding: .6em 1.5em;
  overflow: hidden;
  user-select: none;
  cursor: pointer;
  z-index: 1;
  box-shadow: 0 0 1em rgba(white, .2);
  transition: transform .1s cubic-bezier(.5, 0, .5, 1),
    box-shadow .2s;
  
  &:hover {
    box-shadow: 0 0 2em rgba(white, .3);
  }

  outline: none;

  &:active {
    transform: scale(0.8) translateY(10%);
    transition-timing-function: cubic-bezier(.5, 0, .5, 1);
 }

  
}

.treat {
  --scale-x: 0;
  --scale-y: 0;
  pointer-events: none;
  display: block;
  position: absolute;
  top: 0;
  left: calc(50% - .5rem);
  border-radius: 50%;
  width: 1em;
  height: 1em;
  display: flex;
  justify-content: center;
  align-items: center;
  font-size: 5vmin;
  transform: 
    translate(
      calc( var(--x) * 1px ), 
      calc( var(--y) * 1px )
    ) 
    translate(-50%, -50%);
  pointer-events: none;
  animation: 
    treat-enter .1s ease-in backwards, 
    treat-exit 300ms linear 
    calc( (var(--lifetime, 3000) * 1ms) - 300ms) 
    forwards;

  @keyframes treat-enter {
    from {
      opacity: 0;
    }
  }
  @keyframes treat-exit {
    to {
      opacity: 0;
    }
  }
  
  .inner {
    animation: inner-rotate .6s linear infinite;
    transform: rotate( 
      calc(-1turn * var(--direction) )
    ); 
    @keyframes inner-rotate {
      to { 
        transform: none;
      } 
    }
  }
}